
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;
import 'AddUnit.sol';
import 'GameObj.sol';
import 'GameObjInterface.sol';

contract MilitaryUnit is GameObj {
    uint8 power;

    constructor(AddUnit base, uint8 setPower, uint8 setDefencePoins) internal {
        tvm.accept();
        base.addUnit(this);
        baseAddress = address(base);
        power = setPower;
        defencePoins = setDefencePoins;
    }

    function attack(address enemy) virtual public {
        require(msg.pubkey() == tvm.pubkey(), 100);
        tvm.accept();
        GameObjInterface enemyObj = GameObjInterface(enemy);
        enemyObj.acceptAttack(power, address(this));
    }

    function death(address dest) public virtual override{
        if(isDead()){
            AddUnit(baseAddress).removeUnit(address(this), dest);
        }
    }
    
    function getPower() public view returns(uint8) {
        return power;
    }

}
